package org.chocosolver.samples;

import org.chocosolver.solver.Model;
import org.chocosolver.solver.Solver;
import org.chocosolver.solver.variables.IntVar;
import org.chocosolver.util.tools.ArrayUtils;

public class SudokuKiller {
    
    public static void main(String[] args){
        int i,j,row,col,k;

        Model model = new Model("sudoku killer");

        IntVar [][]bd = model.intVarMatrix("bd", 9,9,1,9);

        for(i=0;i<9;i++){
            model.allDifferent(bd[i]).post();
        }

        for(i=0;i<9;i++){
            IntVar []temp = new IntVar[]{};
            for(j=0;j<9;j++){
                temp = ArrayUtils.concat(temp, bd[j][i]);
            }

            model.allDifferent(temp).post();
        }

        for(row=0;row<9;row+=3){
            for(col=0;col<9;col+=3){
                IntVar []temp = new IntVar[]{};
                for(i=0;i<3;i++){
                    for(j=0;j<3;j++){
                        temp = ArrayUtils.concat(temp, bd[i+row][j+col]);
                    }
                }
                model.allDifferent(temp).post();
            }
        }





        Solver solver = model.getSolver();
        solver.showStatistics();
        solver.showSolutions();
        solver.findSolution();

        for ( i = 0; i < 9; i++)
        {
            for ( j = 0; j < 9; j++)
            {
                System.out.print(" ");/* get the value for the board position [i][j] for the solved board */
                k = bd [i][j].getValue();
                System.out.print(k );
            }
            System.out.println();
        }
    }


}

